name: build-apple-darwin

on:
  workflow_dispatch:
    inputs:
      noir-ref:
        description: The noir reference to checkout
        required: false
      publish:
        type: boolean
        description: Whether to publish the build artifacts
        default: false
  schedule:
    - cron: "0 2 * * *" # run at 2 AM UTC
  push:

jobs:
  build-apple-darwin:
    runs-on: macos-latest
    strategy:
      matrix:
        target: [x86_64-apple-darwin, aarch64-apple-darwin]

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Checkout Noir repo
        uses: actions/checkout@v3
        with:
          repository: noir-lang/noir
          path: noir
          ref: ${{ inputs.noir-ref || 'master' }}

      - name: Setup for Apple Silicon
        if: matrix.target == 'aarch64-apple-darwin'
        run: |
          sudo xcode-select -s /Applications/Xcode_13.2.1.app/Contents/Developer/
          echo "SDKROOT=$(xcrun -sdk macosx$(sw_vers -productVersion) --show-sdk-path)" >> $GITHUB_ENV
          echo "MACOSX_DEPLOYMENT_TARGET=$(xcrun -sdk macosx$(sw_vers -productVersion) --show-sdk-platform-version)" >> $GITHUB_ENV

      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Setup toolchain
        uses: dtolnay/rust-toolchain@1.66.0
        with:
          targets: ${{ matrix.target }}

      - name: Build environment and Compile
        working-directory: noir
        run: |
          cargo build --package nargo --release --target ${{ matrix.target }} --no-default-features --features plonk_bn254_wasm

      - name: Package artifacts
        working-directory: noir
        run: |
          mkdir dist
          cp ./target/${{ matrix.target }}/release/nargo ./dist/nargo
          7z a -ttar -so -an ./dist/* | 7z a -si ./nargo-${{ matrix.target }}.tar.gz

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: nargo-${{ matrix.target }}
          path: ./noir/dist/*
          retention-days: 3

      - name: Test built artifact
        if: matrix.target == 'x86_64-apple-darwin'
        run: |
          cp ./noir/target/${{ matrix.target }}/release/nargo ~/.cargo/bin/

          npm install
          npm test

      - name: Upload binaries to Noir Repo
        uses: svenstaro/upload-release-action@v2
        if: ${{ inputs.publish || github.event_name == 'schedule' }} # A scheduled run implies a nightly release
        with:
          repo_name: noir-lang/noir
          repo_token: ${{ secrets.NOIR_REPO_TOKEN }}
          file: ./noir/nargo-${{ matrix.target }}.tar.gz
          asset_name: nargo-${{ matrix.target }}.tar.gz
          overwrite: true
          tag: ${{ inputs.noir-ref || 'nightly' }} # This will fail if noir-ref is not a tag (e.g. testing a branch)

      # If we're performing a nightly build and it fails acceptance tests then raise an issue.
      - name: Alert on nightly build failure
        uses: JasonEtco/create-an-issue@v2
        if: ${{ failure() && github.event_name == 'schedule' }} 
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WORKFLOW_NAME: ${{ github.workflow }}
          WORKFLOW_URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
        with:
          update_existing: true
          filename: .github/NIGHTLY_BUILD_FAILURE.md
