name: build-linux

on:
  workflow_run:
    workflows:
      - libbarretenberg
    types:
      - completed
  workflow_dispatch:
    inputs:
      noir-ref:
        description: The noir reference to checkout
        required: false
  schedule:
    - cron: "0 2 * * *" # run at 2 AM UTC
  push:

env:
  CROSS_CONFIG: ${{ github.workspace }}/.github/Cross.toml

jobs:
  build-linux:
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        target:
          [
            x86_64-unknown-linux-gnu,
            x86_64-unknown-linux-musl,
            aarch64-unknown-linux-gnu,
            aarch64-unknown-linux-musl,
          ]

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Checkout Noir repo
        uses: actions/checkout@v3
        with:
          repository: noir-lang/noir
          path: noir
          ref: ${{ inputs.noir-ref || 'master' }}

      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - uses: cachix/install-nix-action@v20
        with:
          nix_path: nixpkgs=channel:nixos-22.11
          github_access_token: ${{ secrets.GITHUB_TOKEN }}

      - uses: cachix/cachix-action@v12
        with:
          name: barretenberg
          authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"

      - name: Build barretenberg as libbarretenberg-wasm32
        run: |
          echo "BB_REV=$(jq -r .nodes.barretenberg.locked.rev ./noir/flake.lock)" >> $GITHUB_ENV
          nix build "git+https://github.com/AztecProtocol/barretenberg?rev=${{ env.BB_REV }}#wasm32"
  
      - name: Setup toolchain
        uses: dtolnay/rust-toolchain@1.66.0
        with:
          targets: ${{ matrix.target }}

      - name: Build Nargo
        working-directory: noir
        env:
          BARRETENBERG_BIN_DIR: ${{steps.libbarretenberg-download.outputs.download-path}}
        run: |
          cargo install cross --force --git https://github.com/cross-rs/cross
          cross build --package nargo_cli --release --target=${{ matrix.target }} --no-default-features --features plonk_bn254_wasm

      - name: Package artifacts
        working-directory: noir
        run: |
          mkdir dist
          cp ./target/${{ matrix.target }}/release/nargo ./dist/nargo
          7z a -ttar -so -an ./dist/* | 7z a -si ./nargo-${{ matrix.target }}.tar.gz

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: nargo-${{ matrix.target }}
          path: ./noir/dist/*
          retention-days: 3

      - name: Test built artifact
        if: startsWith(matrix.target, 'x86_64-unknown-linux')
        run: |
          cp ./noir/target/${{ matrix.target }}/release/nargo ~/.cargo/bin/
          npm install
          npm test

      - name: Upload binaries to Noir Repo
        uses: svenstaro/upload-release-action@v2
        if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
        with:
          repo_name: noir-lang/noir
          repo_token: ${{ secrets.NOIR_REPO_TOKEN }}
          file: ./noir/nargo-${{ matrix.target }}.tar.gz
          asset_name: nargo-${{ matrix.target }}.tar.gz
          overwrite: true
          tag: ${{ inputs.noir-ref || 'nightly' }} # This will fail if noir-ref is not a tag (e.g. testing a branch)

      # If we're performing a nightly build and it fails acceptance tests then raise an issue.
      - name: Alert on nightly build failure
        uses: JasonEtco/create-an-issue@v2
        if: ${{ failure() && github.event_name == 'schedule' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WORKFLOW_NAME: ${{ github.workflow }}
          WORKFLOW_URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
        with:
          update_existing: true
          filename: .github/NIGHTLY_BUILD_FAILURE.md
